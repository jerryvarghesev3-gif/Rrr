class SummaryAActivity : AppCompatActivity() {

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_summary_a)

        val gateway = intent.getStringExtra(AActivity.EXTRA_GATEWAY).orEmpty()
        val bedId  = intent.getStringExtra(AActivity.EXTRA_BED).orEmpty()
        val image  = intent.getStringExtra(AActivity.EXTRA_IMAGE_URI)?.let { Uri.parse(it) }

        // show text
        findViewById<TextView>(R.id.txtGateway).text = gateway
        findViewById<TextView>(R.id.txtBed).text = bedId

        // show image (if any)
        image?.let { findViewById<ImageView>(R.id.imgPreview).setImageURI(it) }

        // Next button -> go to BActivity or Final Summary (your flow)
        findViewById<Button>(R.id.btnNext).setOnClickListener {
            startActivity(
                Intent(this, BActivity::class.java).apply {
                    putExtra(AActivity.EXTRA_GATEWAY, gateway)
                    putExtra(AActivity.EXTRA_BED, bedId)
                    image?.let { putExtra(AActivity.EXTRA_IMAGE_URI, it.toString()) }
                }
            )
        }
    }
}








class BActivity : AppCompatActivity() {

    private var locationId: String? = null  // set this after you scan

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_qrb)

        val gateway = intent.getStringExtra(AActivity.EXTRA_GATEWAY).orEmpty()
        val bedId   = intent.getStringExtra(AActivity.EXTRA_BED).orEmpty()
        val image   = intent.getStringExtra(AActivity.EXTRA_IMAGE_URI)

        // ... your scanning code that sets locationId ...

        findViewById<Button>(R.id.btnNextB).setOnClickListener {
            if (locationId.isNullOrBlank()) {
                Toast.makeText(this, "Scan a location QR first", Toast.LENGTH_SHORT).show()
                return@setOnClickListener
            }
            startActivity(
                Intent(this, SummaryActivity::class.java).apply {
                    putExtra(AActivity.EXTRA_GATEWAY, gateway)
                    putExtra(AActivity.EXTRA_BED, bedId)
                    putExtra("locationId", locationId!!.trim())
                    image?.let { putExtra(AActivity.EXTRA_IMAGE_URI, it) }
                }
            )
        }
    }
}





class SummaryActivity : AppCompatActivity() {

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_summary)

        val gateway  = intent.getStringExtra(AActivity.EXTRA_GATEWAY).orEmpty()
        val bedId    = intent.getStringExtra(AActivity.EXTRA_BED).orEmpty()
        val location = intent.getStringExtra("locationId").orEmpty()
        val image    = intent.getStringExtra(AActivity.EXTRA_IMAGE_URI)?.let { Uri.parse(it) }

        // show
        findViewById<TextView>(R.id.txtGateway).text = gateway
        findViewById<TextView>(R.id.txtBed).text = bedId
        findViewById<TextView>(R.id.txtLocation).text = location
        image?.let { findViewById<ImageView>(R.id.imgPreview).setImageURI(it) }

        // before calling your MQTT/HTTP set_location, validate:
        if (gateway.isBlank() || bedId.isBlank() || location.isBlank()) {
            findViewById<TextView>(R.id.txtStatus).text = "Missing data"
            return
        }

        // call your existing set_location(gateway, bedId, location)
        // and update UI with success/fail
    }
}




