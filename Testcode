package com.connect.connection

import android.app.AlertDialog
import android.content.Intent
import android.net.Uri
import android.os.Bundle
import android.widget.Button
import android.widget.ImageView
import android.widget.TextView
import android.widget.Toast
import androidx.activity.result.contract.ActivityResultContracts
import androidx.appcompat.app.AppCompatActivity
import info.mqtt.android.service.MqttAndroidClient
import org.eclipse.paho.client.mqttv3.IMqttDeliveryToken
import org.eclipse.paho.client.mqttv3.MqttCallbackExtended
import org.eclipse.paho.client.mqttv3.MqttMessage
import org.json.JSONObject

class SummaryActivity : AppCompatActivity() {

    // ---- UI ----
    private lateinit var txtSummary: TextView
    private lateinit var imgPreview: ImageView
    private lateinit var txtKlm: TextView
    private lateinit var txtKlmStatus: TextView
    private lateinit var btnVerifyKlm: Button
    private lateinit var btnDone: Button

    // ---- Inputs from previous screen(s) ----
    private var gatewayId = ""
    private var bedId = ""
    private var locationId = ""
    private var imageUri: Uri? = null

    // ---- MQTT (/json/klm_details/sensor) ----
    private val mqtt: MqttAndroidClient? get() = MqttHolder.client
    private val topicKlm = "/json/klm_details/sensor"
    private var klmIdFromTopic: String? = null

    // ---- Scan launcher ----
    private val scanKlmLauncher =
        registerForActivityResult(ActivityResultContracts.StartActivityForResult()) { res ->
            if (res.resultCode == RESULT_OK) {
                val scanned = res.data?.getStringExtra(KLMScanActivity.EXTRA_KLM_SCAN).orEmpty()
                onKlmScanned(scanned)
            }
        }

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_summary)

        // bind views
        txtSummary    = findViewById(R.id.txtSummary)
        imgPreview    = findViewById(R.id.imgPreview)
        txtKlm        = findViewById(R.id.txtKlm)
        txtKlmStatus  = findViewById(R.id.txtKlmStatus)
        btnVerifyKlm  = findViewById(R.id.btnVerifyKlm)
        btnDone       = findViewById(R.id.btnDone)

        // read extras (keys shared across A/B)
        // If your constants live in QRBActivity, change QRActivity::class to QRBActivity::class (ids are the same strings)
        gatewayId  = intent.getStringExtra(QRActivity.EXTRA_GATEWAY).orEmpty()
        bedId      = intent.getStringExtra(QRActivity.EXTRA_BED).orEmpty()
        locationId = intent.getStringExtra(QRActivity.EXTRA_LOCATION).orEmpty()
        intent.getStringExtra(QRActivity.EXTRA_IMAGE_URI)?.let { imageUri = Uri.parse(it) }

        // show header + image
        txtSummary.text = "Gateway: $gatewayId\nBed ID: $bedId\nLocation: $locationId"
        imageUri?.let { imgPreview.setImageURI(it) }

        // defaults for KLM section
        txtKlm.text = "KLM ID: —"
        txtKlmStatus.text = "KLM Status: Not verified"

        btnVerifyKlm.setOnClickListener { launchKlmScan() }
        btnDone.setOnClickListener { finishAffinity() }

        // start listening to klm_details
        subscribeKlmDetails()

        // ask once when page opens
        AlertDialog.Builder(this)
            .setTitle("Verify KLM?")
            .setMessage("Would you like to scan and verify the KLM now?")
            .setPositiveButton("Yes") { _, _ -> launchKlmScan() }
            .setNegativeButton("No", null)
            .show()
    }

    override fun onDestroy() {
        super.onDestroy()
        try {
            mqtt?.let { c ->
                if (c.isConnected) c.unsubscribe(topicKlm)
                c.setCallback(null)
            }
        } catch (_: Exception) {}
    }

    private fun launchKlmScan() {
        scanKlmLauncher.launch(Intent(this, KLMScanActivity::class.java))
    }

    // ---- MQTT subscription and parse ----
    private fun subscribeKlmDetails() {
        val c = mqtt
        if (c == null || !c.isConnected) return
        try {
            c.subscribe(topicKlm, 1, null, null)
            c.setCallback(object : MqttCallbackExtended {
                override fun connectComplete(reconnect: Boolean, serverURI: String?) {}
                override fun connectionLost(cause: Throwable?) {}
                override fun deliveryComplete(token: IMqttDeliveryToken?) {}
                override fun messageArrived(topic: String?, message: MqttMessage?) {
                    if (topic != topicKlm) return
                    val json = message?.toString().orEmpty()
                    handleKlmJson(json)
                }
            })
        } catch (t: Throwable) {
            runOnUiThread {
                Toast.makeText(this, "KLM subscribe failed: ${t.message}", Toast.LENGTH_LONG).show()
            }
        }
    }

    private fun handleKlmJson(json: String) {
        try {
            val root = JSONObject(json)
            val klm = root.optJSONObject("klm")
            val id = klm?.optString("id").orEmpty()
            if (id.isNotBlank()) {
                klmIdFromTopic = id
                runOnUiThread { txtKlm.text = "KLM ID: $id" }
            }
        } catch (_: Exception) { /* ignore */ }
    }

    private fun onKlmScanned(scanned: String) {
        if (scanned.isBlank()) {
            Toast.makeText(this, "Empty KLM scan", Toast.LENGTH_SHORT).show()
            return
        }
        val expected = klmIdFromTopic
        if (expected.isNullOrBlank()) {
            Toast.makeText(this, "KLM details not loaded yet", Toast.LENGTH_LONG).show()
            return
        }
        val ok = scanned == expected
        txtKlmStatus.text = if (ok) "KLM Status: Verified ✅" else "KLM Status: Mismatch ❌"

        // also reflect in the main text
        txtSummary.text = buildString {
            appendLine("Gateway: $gatewayId")
            appendLine("Bed ID: $bedId")
            appendLine("Location: $locationId")
            append("KLM: ${if (ok) "Verified" else "Not Verified"}")
        }
    }
}








<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:id="@+id/rootSummary"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp"
    android:background="#002B5B">

    <!-- Photo preview (optional) -->
    <ImageView
        android:id="@+id/imgPreview"
        android:layout_width="match_parent"
        android:layout_height="200dp"
        android:layout_marginBottom="12dp"
        android:scaleType="centerCrop"
        android:background="@android:color/darker_gray" />

    <!-- Main text (gateway / bed / location and final status) -->
    <TextView
        android:id="@+id/txtSummary"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textColor="@android:color/white"
        android:textSize="18sp"
        android:padding="8dp"
        android:text="Summary…" />

    <!-- KLM info lines -->
    <TextView
        android:id="@+id/txtKlm"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="KLM ID: —"
        android:textColor="@android:color/white"
        android:textSize="16sp"
        android:padding="8dp" />

    <TextView
        android:id="@+id/txtKlmStatus"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="KLM Status: Not verified"
        android:textColor="@android:color/white"
        android:textSize="16sp"
        android:padding="8dp"
        android:layout_marginBottom="16dp" />

    <!-- Optional verify button (you can set visibility=gone if you only want the dialog) -->
    <Button
        android:id="@+id/btnVerifyKlm"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="VERIFY KLM"
        android:layout_marginBottom="12dp" />

    <!-- Done button pinned at bottom by using a spacer -->
    <View
        android:layout_width="match_parent"
        android:layout_height="0dp"
        android:layout_weight="1" />

    <Button
        android:id="@+id/btnDone"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="DONE" />
</LinearLayout>











