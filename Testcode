package com.connect.connection

import android.content.Intent
import android.net.Uri
import android.os.Bundle
import android.util.Log
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import androidx.camera.core.*
import androidx.camera.lifecycle.ProcessCameraProvider
import androidx.core.content.ContextCompat
import com.google.mlkit.vision.barcode.BarcodeScanning
import com.google.mlkit.vision.common.InputImage
import java.io.File
import java.text.SimpleDateFormat
import java.util.*
import java.util.concurrent.ExecutorService
import java.util.concurrent.Executors

class QRActivity : AppCompatActivity() {

    companion object {
        const val EXTRA_BED = "bedId"
        const val EXTRA_IMAGE_URI = "imageUri"
    }

    private lateinit var cameraExecutor: ExecutorService
    private var lastDecoded: String? = null
    private var lastPhotoUri: Uri? = null

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_qra)

        cameraExecutor = Executors.newSingleThreadExecutor()
        startCamera()
    }

    private fun startCamera() {
        val cameraProviderFuture = ProcessCameraProvider.getInstance(this)
        cameraProviderFuture.addListener({
            val cameraProvider = cameraProviderFuture.get()
            val preview = Preview.Builder().build()
            val imageAnalyzer = ImageAnalysis.Builder()
                .build()
                .also {
                    it.setAnalyzer(cameraExecutor) { imageProxy ->
                        processImageProxy(imageProxy)
                    }
                }

            val cameraSelector = CameraSelector.DEFAULT_BACK_CAMERA
            cameraProvider.unbindAll()
            cameraProvider.bindToLifecycle(this, cameraSelector, preview, imageAnalyzer)
        }, ContextCompat.getMainExecutor(this))
    }

    private fun processImageProxy(imageProxy: ImageProxy) {
        val mediaImage = imageProxy.image ?: return
        val image = InputImage.fromMediaImage(mediaImage, imageProxy.imageInfo.rotationDegrees)
        val scanner = BarcodeScanning.getClient()
        scanner.process(image)
            .addOnSuccessListener { barcodes ->
                for (barcode in barcodes) {
                    val rawValue = barcode.rawValue
                    if (!rawValue.isNullOrEmpty() && lastDecoded == null) {
                        lastDecoded = rawValue
                        Log.d("QRActivity", "Decoded: $rawValue")
                        captureImage(imageProxy) { uri ->
                            lastPhotoUri = uri
                            openSummary(rawValue, uri)
                        }
                        break
                    }
                }
            }
            .addOnFailureListener { Log.e("QRActivity", "Scan failed", it) }
            .addOnCompleteListener { imageProxy.close() }
    }

    private fun captureImage(imageProxy: ImageProxy, onSaved: (Uri?) -> Unit) {
        try {
            val buffer = imageProxy.planes[0].buffer
            val bytes = ByteArray(buffer.remaining())
            buffer.get(bytes)

            val file = File(
                externalCacheDir,
                "BED_${SimpleDateFormat("yyyyMMdd_HHmmss", Locale.US).format(Date())}.jpg"
            )
            file.writeBytes(bytes)
            onSaved(Uri.fromFile(file))
        } catch (e: Exception) {
            onSaved(null)
        }
    }

    private fun openSummary(bedId: String, photoUri: Uri?) {
        val i = Intent(this, SummaryAActivity::class.java).apply {
            putExtra(EXTRA_BED, bedId)
            photoUri?.let { putExtra(EXTRA_IMAGE_URI, it.toString()) }
        }
        startActivity(i)
        finish()
    }

    override fun onDestroy() {
        super.onDestroy()
        cameraExecutor.shutdown()
    }
}




<?xml version="1.0" encoding="utf-8"?>
<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <androidx.camera.view.PreviewView
        android:id="@+id/previewView"
        android:layout_width="match_parent"
        android:layout_height="match_parent"/>

</FrameLayout>





package com.connect.connection

import android.content.Intent
import android.net.Uri
import android.os.Bundle
import android.widget.Button
import android.widget.ImageView
import android.widget.TextView
import androidx.appcompat.app.AppCompatActivity

class SummaryAActivity : AppCompatActivity() {

    private var bedId: String = ""
    private var imageUri: Uri? = null

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_summary_a)

        val txtBed = findViewById<TextView>(R.id.txtBedId)
        val imgBed = findViewById<ImageView>(R.id.imgBed)
        val btnRescan = findViewById<Button>(R.id.btnRescanA)
        val btnContinue = findViewById<Button>(R.id.btnContinueA)

        bedId = intent.getStringExtra(QRActivity.EXTRA_BED).orEmpty()
        intent.getStringExtra(QRActivity.EXTRA_IMAGE_URI)?.let { imageUri = Uri.parse(it) }

        txtBed.text = "Bed ID: $bedId"
        imageUri?.let { imgBed.setImageURI(it) }

        btnRescan.setOnClickListener { finish() }

        btnContinue.setOnClickListener {
            val i = Intent(this, QRBActivity::class.java).apply {
                putExtra(QRActivity.EXTRA_BED, bedId)
            }
            startActivity(i)
            finish()
        }
    }
}





<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical"
    android:padding="16dp"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <ImageView
        android:id="@+id/imgBed"
        android:layout_width="match_parent"
        android:layout_height="200dp"
        android:scaleType="centerCrop"/>

    <TextView
        android:id="@+id/txtBedId"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textColor="@android:color/black"
        android:textSize="18sp"
        android:padding="8dp"/>

    <Button
        android:id="@+id/btnRescanA"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="RESCAN"/>

    <Button
        android:id="@+id/btnContinueA"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="CONTINUE"/>
</LinearLayout>






package com.connect.connection

import android.content.Intent
import android.net.Uri
import android.os.Bundle
import androidx.appcompat.app.AppCompatActivity

class QRBActivity : AppCompatActivity() {

    companion object {
        const val EXTRA_LOCATION = "locationId"
        const val EXTRA_IMAGE_URI = "imageUri"
    }

    private var lastDecoded: String? = null
    private var lastPhotoUri: Uri? = null
    private var bedId: String = ""

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_qrb)

        bedId = intent.getStringExtra(QRActivity.EXTRA_BED).orEmpty()

        // TODO: CameraX + MLKit same as QRActivity, then:
        // lastDecoded = "LOC_123"
        // lastPhotoUri = uri
        // openSummaryB(lastDecoded!!, lastPhotoUri)
    }

    private fun openSummaryB(locationId: String, photo: Uri?) {
        val i = Intent(this, SummaryBActivity::class.java).apply {
            putExtra(QRActivity.EXTRA_BED, bedId)
            putExtra(EXTRA_LOCATION, locationId)
            photo?.let { putExtra(EXTRA_IMAGE_URI, it.toString()) }
        }
        startActivity(i)
        finish()
    }
}






<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <androidx.camera.view.PreviewView
        android:id="@+id/previewViewB"
        android:layout_width="match_parent"
        android:layout_height="match_parent"/>

</FrameLayout>






package com.connect.connection

import android.content.Intent
import android.net.Uri
import android.os.Bundle
import android.widget.Button
import android.widget.ImageView
import android.widget.TextView
import androidx.appcompat.app.AppCompatActivity

class SummaryBActivity : AppCompatActivity() {

    private var bedId: String = ""
    private var locationId: String = ""
    private var imageUri: Uri? = null

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_summary_b)

        val txtLocation = findViewById<TextView>(R.id.txtLocationId)
        val imgLoc = findViewById<ImageView>(R.id.imgLocation)
        val btnRescan = findViewById<Button>(R.id.btnRescanB)
        val btnContinue = findViewById<Button>(R.id.btnContinueB)

        bedId = intent.getStringExtra(QRActivity.EXTRA_BED).orEmpty()
        locationId = intent.getStringExtra(QRBActivity.EXTRA_LOCATION).orEmpty()
        intent.getStringExtra(QRBActivity.EXTRA_IMAGE_URI)?.let { imageUri = Uri.parse(it) }

        txtLocation.text = "Location: $locationId"
        imageUri?.let { imgLoc.setImageURI(it) }

        btnRescan.setOnClickListener { finish() }

        btnContinue.setOnClickListener {
            // ðŸ”¹ here you would call MQTT publish "set_location"
            // For now just pass values to final Summary
            val i = Intent(this, SummaryActivity::class.java).apply {
                putExtra(QRActivity.EXTRA_BED, bedId)
                putExtra(QRBActivity.EXTRA_LOCATION, locationId)
            }
            startActivity(i)
            finish()
        }
    }
}







<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical"
    android:padding="16dp"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <ImageView
        android:id="@+id/imgLocation"
        android:layout_width="match_parent"
        android:layout_height="200dp"
        android:scaleType="centerCrop"/>

    <TextView
        android:id="@+id/txtLocationId"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textSize="18sp"
        android:padding="8dp"/>

    <Button
        android:id="@+id/btnRescanB"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="RESCAN"/>

    <Button
        android:id="@+id/btnContinueB"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="CONTINUE"/>
</LinearLayout>





package com.connect.connection

import android.os.Bundle
import android.widget.Button
import android.widget.TextView
import androidx.appcompat.app.AppCompatActivity

class SummaryActivity : AppCompatActivity() {

    private var bedId: String = ""
    private var locationId: String = ""

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_summary)

        val txtSummary = findViewById<TextView>(R.id.txtSummary)
        val btnDone = findViewById<Button>(R.id.btnDone)

        bedId = intent.getStringExtra(QRActivity.EXTRA_BED).orEmpty()
        locationId = intent.getStringExtra(QRBActivity.EXTRA_LOCATION).orEmpty()

        txtSummary.text = "Final Summary:\nBed: $bedId\nLocation: $locationId\nStatus: Connected âœ…"

        btnDone.setOnClickListener { finishAffinity() }
    }
}






<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical"
    android:gravity="center"
    android:padding="16dp"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <TextView
        android:id="@+id/txtSummary"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textSize="18sp"
        android:padding="12dp"
        android:gravity="center"/>

    <Button
        android:id="@+id/btnDone"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="DONE"/>
</LinearLayout>




