package com.connect.connection

import android.net.Uri
import android.os.Bundle
import android.widget.Button
import android.widget.ImageView
import android.widget.TextView
import androidx.appcompat.app.AppCompatActivity

class SummaryAActivity : AppCompatActivity() {

    private lateinit var txtGateway: TextView
    private lateinit var txtBed: TextView
    private lateinit var imgPreview: ImageView
    private lateinit var btnNext: Button
    private lateinit var btnBack: Button

    private var gatewayId = ""
    private var bedId = ""
    private var imageUri: Uri? = null

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_summary_a)

        txtGateway = findViewById(R.id.txtGateway)
        txtBed     = findViewById(R.id.txtBed)
        imgPreview = findViewById(R.id.imgPreview)
        btnNext    = findViewById(R.id.btnNext)
        btnBack    = findViewById(R.id.btnBack)

        gatewayId = intent.getStringExtra(EXTRA_GATEWAY).orEmpty()
        bedId     = intent.getStringExtra(EXTRA_BED).orEmpty()
        imageUri  = intent.getStringExtra(EXTRA_IMAGE_URI)?.let { Uri.parse(it) }

        txtGateway.text = "Gateway: $gatewayId"
        txtBed.text     = "Bed ID: $bedId"
        imageUri?.let { imgPreview.setImageURI(it) }

        btnBack.setOnClickListener { finish() }
        btnNext.setOnClickListener {
            val i = android.content.Intent(this, BActivity::class.java).apply {
                putExtra(EXTRA_GATEWAY, gatewayId)
                putExtra(EXTRA_BED, bedId)
                imageUri?.toString()?.let { putExtra(EXTRA_IMAGE_URI, it) }
            }
            startActivity(i)
        }
    }
}







<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical" android:padding="16dp"
    android:layout_width="match_parent" android:layout_height="match_parent">

    <ImageView
        android:id="@+id/imgPreview"
        android:layout_width="match_parent"
        android:layout_height="200dp"
        android:scaleType="centerCrop"
        android:contentDescription="bed photo" />

    <TextView
        android:id="@+id/txtGateway"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textStyle="bold" android:textSize="18sp"
        android:paddingTop="12dp"/>

    <TextView
        android:id="@+id/txtBed"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textSize="16sp" />

    <LinearLayout
        android:layout_width="match_parent" android:layout_height="wrap_content"
        android:orientation="horizontal" android:gravity="end" android:paddingTop="16dp">
        <Button android:id="@+id/btnBack"
            android:layout_width="wrap_content" android:layout_height="wrap_content"
            android:text="BACK"/>
        <Button android:id="@+id/btnNext"
            android:layout_width="wrap_content" android:layout_height="wrap_content"
            android:text="NEXT" android:layout_marginStart="12dp"/>
    </LinearLayout>
</LinearLayout>







package com.connect.connection

import android.Manifest
import android.content.pm.PackageManager
import android.net.Uri
import android.os.Bundle
import android.widget.Button
import android.widget.TextView
import android.widget.Toast
import androidx.activity.result.contract.ActivityResultContracts
import androidx.appcompat.app.AppCompatActivity
import androidx.core.content.ContextCompat

class BActivity : AppCompatActivity() {

    private lateinit var txtInfo: TextView
    private lateinit var btnContinue: Button
    private lateinit var btnCancel: Button
    private lateinit var btnRescan: Button

    private var gatewayId = ""
    private var bedId = ""
    private var imageUri: Uri? = null

    // replace with your scanning variables (like in AActivity)
    private var lastDecoded: String? = null

    private val requestCameraPerm =
        registerForActivityResult(ActivityResultContracts.RequestPermission()) { granted ->
            if (granted) startCameraForLocation() else finish()
        }

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_b)

        txtInfo      = findViewById(R.id.txtInfo)
        btnContinue  = findViewById(R.id.btnContinueB)
        btnCancel    = findViewById(R.id.btnCancelB)
        btnRescan    = findViewById(R.id.btnRescanB)

        gatewayId = intent.getStringExtra(EXTRA_GATEWAY).orEmpty()
        bedId     = intent.getStringExtra(EXTRA_BED).orEmpty()
        imageUri  = intent.getStringExtra(EXTRA_IMAGE_URI)?.let { Uri.parse(it) }

        txtInfo.text = "Aim at Location QR"

        btnCancel.setOnClickListener { finish() }
        btnRescan.setOnClickListener {
            lastDecoded = null
            txtInfo.text = "Aim at Location QR"
            // restart analyzer if needed
        }
        btnContinue.setOnClickListener {
            val locationId = lastDecoded?.trim().orEmpty()
            if (locationId.isEmpty()) {
                Toast.makeText(this, "Scan location first", Toast.LENGTH_SHORT).show()
                return@setOnClickListener
            }
            val i = android.content.Intent(this, SummaryBActivity::class.java).apply {
                putExtra(EXTRA_GATEWAY, gatewayId)
                putExtra(EXTRA_BED, bedId)
                putExtra(EXTRA_LOCATION, locationId)
                imageUri?.toString()?.let { putExtra(EXTRA_IMAGE_URI, it) }
            }
            startActivity(i)
        }

        if (ContextCompat.checkSelfPermission(this, Manifest.permission.CAMERA)
            == PackageManager.PERMISSION_GRANTED) {
            startCameraForLocation()
        } else {
            requestCameraPerm.launch(Manifest.permission.CAMERA)
        }
    }

    private fun startCameraForLocation() {
        // Reuse your AActivity ML Kit + CameraX setup here.
        // When a QR is decoded, set:
        //   lastDecoded = decodedString
        //   txtInfo.text = decodedString
    }
}






<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical" android:padding="16dp"
    android:layout_width="match_parent" android:layout_height="match_parent">

    <!-- You can add PreviewView here if you want the camera preview on this page -->
    <!--<androidx.camera.view.PreviewView
        android:id="@+id/previewB"
        android:layout_width="match_parent"
        android:layout_height="220dp" />-->

    <TextView
        android:id="@+id/txtInfo"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Aim at Location QR"
        android:textSize="18sp" android:paddingTop="12dp" />

    <LinearLayout
        android:layout_width="match_parent" android:layout_height="wrap_content"
        android:orientation="vertical" android:paddingTop="16dp">

        <Button
            android:id="@+id/btnRescanB"
            android:layout_width="match_parent"
            android:layout_height="48dp"
            android:text="RESCAN" />

        <Button
            android:id="@+id/btnContinueB"
            android:layout_width="match_parent"
            android:layout_height="48dp"
            android:text="CONTINUE"
            android:layout_marginTop="8dp" />

        <Button
            android:id="@+id/btnCancelB"
            android:layout_width="match_parent"
            android:layout_height="48dp"
            android:text="CANCEL"
            android:layout_marginTop="8dp" />
    </LinearLayout>
</LinearLayout>








package com.connect.connection

import android.net.Uri
import android.os.Bundle
import android.widget.Button
import android.widget.ImageView
import android.widget.TextView
import androidx.appcompat.app.AppCompatActivity

class SummaryBActivity : AppCompatActivity() {

    private lateinit var txtGateway: TextView
    private lateinit var txtBed: TextView
    private lateinit var txtLocation: TextView
    private lateinit var imgPreview: ImageView
    private lateinit var btnNext: Button
    private lateinit var btnBack: Button

    private var gatewayId = ""
    private var bedId = ""
    private var locationId = ""
    private var imageUri: Uri? = null

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_summary_b)

        txtGateway = findViewById(R.id.txtGatewayB)
        txtBed     = findViewById(R.id.txtBedB)
        txtLocation= findViewById(R.id.txtLocationB)
        imgPreview = findViewById(R.id.imgPreviewB)
        btnNext    = findViewById(R.id.btnNextB)
        btnBack    = findViewById(R.id.btnBackB)

        gatewayId  = intent.getStringExtra(EXTRA_GATEWAY).orEmpty()
        bedId      = intent.getStringExtra(EXTRA_BED).orEmpty()
        locationId = intent.getStringExtra(EXTRA_LOCATION).orEmpty()
        imageUri   = intent.getStringExtra(EXTRA_IMAGE_URI)?.let { Uri.parse(it) }

        txtGateway.text  = "Gateway: $gatewayId"
        txtBed.text      = "Bed ID: $bedId"
        txtLocation.text = "Location ID: $locationId"
        imageUri?.let { imgPreview.setImageURI(it) }

        btnBack.setOnClickListener { finish() }
        btnNext.setOnClickListener {
            val i = android.content.Intent(this, SummaryActivity::class.java).apply {
                putExtra(EXTRA_GATEWAY, gatewayId)
                putExtra(EXTRA_BED, bedId)
                putExtra(EXTRA_LOCATION, locationId)
                imageUri?.toString()?.let { putExtra(EXTRA_IMAGE_URI, it) }
            }
            startActivity(i)
        }
    }
}






<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical" android:padding="16dp"
    android:layout_width="match_parent" android:layout_height="match_parent">

    <ImageView
        android:id="@+id/imgPreviewB"
        android:layout_width="match_parent"
        android:layout_height="200dp"
        android:scaleType="centerCrop"
        android:contentDescription="photo" />

    <TextView
        android:id="@+id/txtGatewayB"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textStyle="bold" android:textSize="18sp"
        android:paddingTop="12dp"/>

    <TextView
        android:id="@+id/txtBedB"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textSize="16sp" />

    <TextView
        android:id="@+id/txtLocationB"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textSize="16sp" />

    <LinearLayout
        android:layout_width="match_parent" android:layout_height="wrap_content"
        android:orientation="horizontal" android:gravity="end" android:paddingTop="16dp">
        <Button android:id="@+id/btnBackB"
            android:layout_width="wrap_content" android:layout_height="wrap_content"
            android:text="BACK"/>
        <Button android:id="@+id/btnNextB"
            android:layout_width="wrap_content" android:layout_height="wrap_content"
            android:text="NEXT" android:layout_marginStart="12dp"/>
    </LinearLayout>
</LinearLayout>






package com.connect.connection

import android.net.Uri
import android.os.Bundle
import android.widget.Button
import android.widget.ImageView
import android.widget.TextView
import androidx.appcompat.app.AppCompatActivity

class SummaryActivity : AppCompatActivity() {

    private lateinit var txtGateway: TextView
    private lateinit var txtBed: TextView
    private lateinit var txtLocation: TextView
    private lateinit var imgPreview: ImageView
    private lateinit var btnDone: Button

    private var gatewayId = ""
    private var bedId = ""
    private var locationId = ""
    private var imageUri: Uri? = null

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_summary_final)

        txtGateway = findViewById(R.id.txtGatewayF)
        txtBed     = findViewById(R.id.txtBedF)
        txtLocation= findViewById(R.id.txtLocationF)
        imgPreview = findViewById(R.id.imgPreviewF)
        btnDone    = findViewById(R.id.btnDone)

        gatewayId  = intent.getStringExtra(EXTRA_GATEWAY).orEmpty()
        bedId      = intent.getStringExtra(EXTRA_BED).orEmpty()
        locationId = intent.getStringExtra(EXTRA_LOCATION).orEmpty()
        imageUri   = intent.getStringExtra(EXTRA_IMAGE_URI)?.let { Uri.parse(it) }

        txtGateway.text  = "Gateway: $gatewayId"
        txtBed.text      = "Bed ID: $bedId"
        txtLocation.text = "Location ID: $locationId"
        imageUri?.let { imgPreview.setImageURI(it) }

        // Kick your real "set_location" here once all three are present
        if (gatewayId.isNotBlank() && bedId.isNotBlank() && locationId.isNotBlank()) {
            setLocation(gatewayId, bedId, locationId)
        } else {
            // show friendly message if something is missing
            // (you can keep your existing error UI)
        }

        btnDone.setOnClickListener { finish() }
    }

    private fun setLocation(gatewayId: String, bedId: String, locationId: String) {
        // Use your existing MQTT/HTTP publish.
        // Build topic & payload exactly like your old working code.
        // Example (pseudo):
        // mqtt.publish(".../set_location/request", "{ gateway:'$gatewayId', bed:'$bedId', location:'$locationId' }")
    }
}







<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical" android:padding="16dp"
    android:layout_width="match_parent" android:layout_height="match_parent">

    <ImageView
        android:id="@+id/imgPreviewF"
        android:layout_width="match_parent"
        android:layout_height="200dp"
        android:scaleType="centerCrop"
        android:contentDescription="photo" />

    <TextView
        android:id="@+id/txtGatewayF"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textStyle="bold" android:textSize="18sp"
        android:paddingTop="12dp"/>

    <TextView
        android:id="@+id/txtBedF"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textSize="16sp" />

    <TextView
        android:id="@+id/txtLocationF"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textSize="16sp" />

    <Button
        android:id="@+id/btnDone"
        android:layout_width="match_parent"
        android:layout_height="48dp"
        android:text="DONE"
        android:layout_marginTop="16dp"/>
</LinearLayout>









